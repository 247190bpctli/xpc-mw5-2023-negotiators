// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eshopBackend.DAL;

#nullable disable

namespace eshopBackend.DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230427223816_seedData")]
    partial class seedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("eshopBackend.DAL.Entities.CartEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("DeliveryAddress")
                        .HasColumnType("longtext");

                    b.Property<int?>("DeliveryType")
                        .HasColumnType("int");

                    b.Property<bool>("Finalized")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("LastEdit")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("PaymentDetails")
                        .HasColumnType("longtext");

                    b.Property<int?>("PaymentType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("eshopBackend.DAL.Entities.CategoryEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8f95f348-52c3-b4ae-f48f-ee06eba1bcbf"),
                            Description = "Voluptatem et rerum et aut rerum et voluptas cum aut.",
                            ImageUrl = "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22200%22%20height%3D%22100%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22100%22%20y%3D%2250%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3E200x100%3C%2Ftext%3E%3C%2Fsvg%3E",
                            Name = "Cargo Van"
                        },
                        new
                        {
                            Id = new Guid("88a26359-c130-0418-3ba3-0cc7494c5287"),
                            Description = "Voluptatibus voluptatibus laudantium et nostrum dolor corporis nihil nostrum.",
                            ImageUrl = "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22200%22%20height%3D%22100%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22100%22%20y%3D%2250%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3E200x100%3C%2Ftext%3E%3C%2Fsvg%3E",
                            Name = "Coupe"
                        },
                        new
                        {
                            Id = new Guid("9519ef64-efca-c060-1dc4-f57bb32e1e68"),
                            Description = "Ducimus deserunt totam sunt fugiat sapiente aut voluptate.",
                            ImageUrl = "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22200%22%20height%3D%22100%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22100%22%20y%3D%2250%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3E200x100%3C%2Ftext%3E%3C%2Fsvg%3E",
                            Name = "Wagon"
                        },
                        new
                        {
                            Id = new Guid("817a56e2-15a1-0a5e-73e9-8b02851f531f"),
                            Description = "Et numquam quia reiciendis eligendi molestiae in incidunt et facere.",
                            ImageUrl = "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22200%22%20height%3D%22100%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22100%22%20y%3D%2250%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3E200x100%3C%2Ftext%3E%3C%2Fsvg%3E",
                            Name = "Hatchback"
                        },
                        new
                        {
                            Id = new Guid("cbe04e16-5651-8dec-fef1-297ee520276a"),
                            Description = "Similique minus consectetur rerum necessitatibus voluptate et ut nihil.",
                            ImageUrl = "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22200%22%20height%3D%22100%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22100%22%20y%3D%2250%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3E200x100%3C%2Ftext%3E%3C%2Fsvg%3E",
                            Name = "Convertible"
                        });
                });

            modelBuilder.Entity("eshopBackend.DAL.Entities.ManufacturerEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("LogoUrl")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Origin")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Manufacturers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ce233d69-1560-ca25-39c2-65f3aaee97be"),
                            Description = "Dolorem ut aliquid libero voluptas.",
                            LogoUrl = "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22200%22%20height%3D%22100%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22100%22%20y%3D%2250%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3E200x100%3C%2Ftext%3E%3C%2Fsvg%3E",
                            Name = "BMW",
                            Origin = "Luxembourg"
                        },
                        new
                        {
                            Id = new Guid("4acf9fb9-f1c0-3e93-99f5-daaf3b654b91"),
                            Description = "Voluptatum consequuntur quo.",
                            LogoUrl = "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22200%22%20height%3D%22100%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22100%22%20y%3D%2250%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3E200x100%3C%2Ftext%3E%3C%2Fsvg%3E",
                            Name = "Jaguar",
                            Origin = "Slovakia (Slovak Republic)"
                        },
                        new
                        {
                            Id = new Guid("389f64c4-a6fd-997e-b230-b40c9feb0e09"),
                            Description = "Et consequatur est accusantium perferendis delectus inventore.",
                            LogoUrl = "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22200%22%20height%3D%22100%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22100%22%20y%3D%2250%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3E200x100%3C%2Ftext%3E%3C%2Fsvg%3E",
                            Name = "Ford",
                            Origin = "Netherlands Antilles"
                        },
                        new
                        {
                            Id = new Guid("ecfcfd47-73ae-1870-2fc7-9007cd0cf82a"),
                            Description = "Voluptatibus vero ducimus veniam eos.",
                            LogoUrl = "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22200%22%20height%3D%22100%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22100%22%20y%3D%2250%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3E200x100%3C%2Ftext%3E%3C%2Fsvg%3E",
                            Name = "Ferrari",
                            Origin = "Malaysia"
                        },
                        new
                        {
                            Id = new Guid("2a5e1227-6a0c-33f3-816e-1a3c387f1af4"),
                            Description = "Non odio laboriosam.",
                            LogoUrl = "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22200%22%20height%3D%22100%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22100%22%20y%3D%2250%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3E200x100%3C%2Ftext%3E%3C%2Fsvg%3E",
                            Name = "Rolls Royce",
                            Origin = "Comoros"
                        });
                });

            modelBuilder.Entity("eshopBackend.DAL.Entities.ProductEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("CartEntityId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("ManufacturerId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<double>("Weight")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("CartEntityId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("Products");

                    b.HasDiscriminator<string>("Discriminator").HasValue("ProductEntity");

                    b.UseTphMappingStrategy();

                    b.HasData(
                        new
                        {
                            Id = new Guid("e50160d7-a707-c20b-c910-382620fb67c6"),
                            CategoryId = new Guid("8f95f348-52c3-b4ae-f48f-ee06eba1bcbf"),
                            Description = "Illo qui ad optio vitae ea.",
                            ImageUrl = "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22200%22%20height%3D%22100%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22100%22%20y%3D%2250%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3E200x100%3C%2Ftext%3E%3C%2Fsvg%3E",
                            ManufacturerId = new Guid("ce233d69-1560-ca25-39c2-65f3aaee97be"),
                            Name = "Chrysler",
                            Price = 483.0,
                            Stock = 4,
                            Weight = 23.0
                        },
                        new
                        {
                            Id = new Guid("3d4c5b68-9a73-baf5-f63e-2ffd7cb80377"),
                            CategoryId = new Guid("88a26359-c130-0418-3ba3-0cc7494c5287"),
                            Description = "Consequuntur sit cum provident.",
                            ImageUrl = "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22200%22%20height%3D%22100%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22100%22%20y%3D%2250%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3E200x100%3C%2Ftext%3E%3C%2Fsvg%3E",
                            ManufacturerId = new Guid("4acf9fb9-f1c0-3e93-99f5-daaf3b654b91"),
                            Name = "Audi",
                            Price = 113.0,
                            Stock = 0,
                            Weight = 0.0
                        },
                        new
                        {
                            Id = new Guid("59953808-11cc-5b6d-1b80-1fd1c7754b3f"),
                            CategoryId = new Guid("9519ef64-efca-c060-1dc4-f57bb32e1e68"),
                            Description = "Eveniet a suscipit sed aspernatur.",
                            ImageUrl = "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22200%22%20height%3D%22100%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22100%22%20y%3D%2250%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3E200x100%3C%2Ftext%3E%3C%2Fsvg%3E",
                            ManufacturerId = new Guid("389f64c4-a6fd-997e-b230-b40c9feb0e09"),
                            Name = "Mazda",
                            Price = 209.0,
                            Stock = 2,
                            Weight = 44.0
                        },
                        new
                        {
                            Id = new Guid("22173c19-03e4-1f35-1e5a-6d403ca72a3a"),
                            CategoryId = new Guid("817a56e2-15a1-0a5e-73e9-8b02851f531f"),
                            Description = "Voluptates quae placeat est dolore.",
                            ImageUrl = "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22200%22%20height%3D%22100%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22100%22%20y%3D%2250%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3E200x100%3C%2Ftext%3E%3C%2Fsvg%3E",
                            ManufacturerId = new Guid("ecfcfd47-73ae-1870-2fc7-9007cd0cf82a"),
                            Name = "Mazda",
                            Price = 364.0,
                            Stock = 2,
                            Weight = 17.0
                        },
                        new
                        {
                            Id = new Guid("8ab9bb7a-2cc9-a5c9-cabe-1fa9afa04c05"),
                            CategoryId = new Guid("cbe04e16-5651-8dec-fef1-297ee520276a"),
                            Description = "Omnis dolor quo enim et velit dolor.",
                            ImageUrl = "data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20baseProfile%3D%22full%22%20width%3D%22200%22%20height%3D%22100%22%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22grey%22%2F%3E%3Ctext%20x%3D%22100%22%20y%3D%2250%22%20font-size%3D%2220%22%20alignment-baseline%3D%22middle%22%20text-anchor%3D%22middle%22%20fill%3D%22white%22%3E200x100%3C%2Ftext%3E%3C%2Fsvg%3E",
                            ManufacturerId = new Guid("2a5e1227-6a0c-33f3-816e-1a3c387f1af4"),
                            Name = "Land Rover",
                            Price = 142.0,
                            Stock = 0,
                            Weight = 22.0
                        });
                });

            modelBuilder.Entity("eshopBackend.DAL.Entities.ReviewEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("ProductEntityId")
                        .HasColumnType("char(36)");

                    b.Property<double>("Stars")
                        .HasColumnType("double");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ProductEntityId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("eshopBackend.DAL.Entities.ProductInCartEntity", b =>
                {
                    b.HasBaseType("eshopBackend.DAL.Entities.ProductEntity");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("ProductInCartEntity");
                });

            modelBuilder.Entity("eshopBackend.DAL.Entities.ProductEntity", b =>
                {
                    b.HasOne("eshopBackend.DAL.Entities.CartEntity", null)
                        .WithMany("Products")
                        .HasForeignKey("CartEntityId");

                    b.HasOne("eshopBackend.DAL.Entities.CategoryEntity", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId");

                    b.HasOne("eshopBackend.DAL.Entities.ManufacturerEntity", "Manufacturer")
                        .WithMany()
                        .HasForeignKey("ManufacturerId");

                    b.Navigation("Category");

                    b.Navigation("Manufacturer");
                });

            modelBuilder.Entity("eshopBackend.DAL.Entities.ReviewEntity", b =>
                {
                    b.HasOne("eshopBackend.DAL.Entities.ProductEntity", null)
                        .WithMany("Reviews")
                        .HasForeignKey("ProductEntityId");
                });

            modelBuilder.Entity("eshopBackend.DAL.Entities.CartEntity", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("eshopBackend.DAL.Entities.CategoryEntity", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("eshopBackend.DAL.Entities.ProductEntity", b =>
                {
                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
